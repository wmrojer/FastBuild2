buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

// Java version target/source compatibility
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
	//Import config file thanks to pahimar :D
	ext.configFile = file "buildconfig.properties"

}

configFile.withReader {
    // read config. it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

if ("${System.env.CI}" == "true"){
  version = config.mod_version + "-" + "${System.env.BUILD_NUMBER}"
} else {
  version = config.mod_version
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version

	replaceIn "ModInfo.java"
	replace "@VERSION@", project.version
	replace "@MCVERSION@", config.minecraft_version

    runDir = "eclipse"
}

group= "se.robo.fastbuild2"
archivesBaseName = "fastbuild2_"+minecraft.version

sourceSets {
    main {
        java { srcDirs = ["$projectDir/src/java"] }
        resources { srcDirs = ["$projectDir/src/resources"] }
    }
}

dependencies {
		//compile 'net.malisis:malisiscore:1.7.10-0.10.5:dev'
		//compile 'net.malisis:malisisdoors:1.7.10-1.4.3:dev'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
  manifest {
  attributes 'FMLCorePlugin': 'se.robo.fastbuild2.FastBuild2Core',
                  'FMLCorePluginContainsFMLMod': 'true'
  }
	exclude '**/*.bak'
	exclude '**/ItemBlock.class'
	includeEmptyDirs = false
}

task srcJar(type: Jar) {
	from(sourceSets.main.allSource) {
		include '**'
		exclude '**/*.bak'
	}

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	classifier = 'src'
}

task devJar(type: Jar) {
	from(sourceSets.main.output) {
		include '**'
		exclude '**/*.bak'
	}

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	classifier = 'dev'
}

artifacts {
    //archives srcJar
    archives devJar
}
